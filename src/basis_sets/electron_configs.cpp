/*
 * electron_configs.cpp
 *
 *  Created on: Feb 7, 2023
 *      Author: connor
 */

#include "electron_configs.hpp"

using namespace compchem;

GSConfig::GSConfig(int z, std::initializer_list<int> conf) {
	this->z = z;
	this->size_confs = conf.size();
	this->confs = new int[this->size_confs];
	int i = 0;
	for(int gs : conf) {
		this->confs[i] = gs;
		i++;
	}
}

int GSConfig::getShells() const {
	return this->size_confs;
}

int GSConfig::getZ() const {
	return this->z;
}

int GSConfig::operator[](int index) const {
	return this->confs[index];
}

const GSConfig &compchem::getconfig(int Z) {
  static GSConfig gsconfigs[] = {
    GSConfig(1, {1}),	// H: 1s1
    GSConfig(2, {2}),	// He: 1s2
    GSConfig(3, {2, 1}),	// Li: 1s2 2s1
    GSConfig(4, {2, 2}),	// Be: 1s2 2s2
    GSConfig(5, {2, 2, 1}),	// B: 1s2 2s2 2p1
    GSConfig(6, {2, 2, 2}),	// C: 1s2 2s2 2p2
    GSConfig(7, {2, 2, 3}),	// N: 1s2 2s2 2p3
    GSConfig(8, {2, 2, 4}),	// O: 1s2 2s2 2p4
    GSConfig(9, {2, 2, 5}),	// F: 1s2 2s2 2p5
    GSConfig(10, {2, 2, 6}),	// Ne: 1s2 2s2 2p6
    GSConfig(11, {2, 2, 6, 1}),	// Na: [Ne] 3s1
    GSConfig(12, {2, 2, 6, 2}),	// Mg: [Ne] 3s2
    GSConfig(13, {2, 2, 6, 2, 1}),	// Al: [Ne] 3s2 3p1
    GSConfig(14, {2, 2, 6, 2, 2}),	// Si: [Ne] 3s2 3p2
    GSConfig(15, {2, 2, 6, 2, 3}),	// P: [Ne] 3s2 3p3
    GSConfig(16, {2, 2, 6, 2, 4}),	// S: [Ne] 3s2 3p4
    GSConfig(17, {2, 2, 6, 2, 5}),	// Cl: [Ne] 3s2 3p5
    GSConfig(18, {2, 2, 6, 2, 6}),	// Ar: [Ne] 3s2 3p6
    GSConfig(19, {2, 2, 6, 2, 6, 1}),	// K: [Ar] 4s1
    GSConfig(20, {2, 2, 6, 2, 6, 2}),	// Ca: [Ar] 4s2
    GSConfig(21, {2, 2, 6, 2, 6, 2, 1}),	// Sc: [Ar] 4s2 3d1
    GSConfig(22, {2, 2, 6, 2, 6, 2, 2}),	// Ti: [Ar] 4s2 3d2
    GSConfig(23, {2, 2, 6, 2, 6, 2, 3}),	// V: [Ar] 4s2 3d3
    GSConfig(24, {2, 2, 6, 2, 6, 1, 5}),	// Cr: [Ar] 4s1 3d5 *
    GSConfig(25, {2, 2, 6, 2, 6, 2, 5}),	// Mn: [Ar] 4s2 3d5
    GSConfig(26, {2, 2, 6, 2, 6, 2, 6}),	// Fe: [Ar] 4s2 3d6
    GSConfig(27, {2, 2, 6, 2, 6, 2, 7}),	// Co: [Ar] 4s2 3d7
    GSConfig(28, {2, 2, 6, 2, 6, 2, 8}),	// Ni: [Ar] 4s2 3d8
    GSConfig(29, {2, 2, 6, 2, 6, 1, 10}),	// Cu: [Ar] 4s1 3d10 *
    GSConfig(30, {2, 2, 6, 2, 6, 2, 10}),	// Zn: [Ar] 4s2 3d10
    GSConfig(31, {2, 2, 6, 2, 6, 2, 10, 1}),	// Ga: [Ar] 4s2 3d10 4p1
    GSConfig(32, {2, 2, 6, 2, 6, 2, 10, 2}),	// Ge: [Ar] 4s2 3d10 4p2
    GSConfig(33, {2, 2, 6, 2, 6, 2, 10, 3}),	// As: [Ar] 4s2 3d10 4p3
    GSConfig(34, {2, 2, 6, 2, 6, 2, 10, 4}),	// Se: [Ar] 4s2 3d10 4p4
    GSConfig(35, {2, 2, 6, 2, 6, 2, 10, 5}),	// Br: [Ar] 4s2 3d10 4p5
    GSConfig(36, {2, 2, 6, 2, 6, 2, 10, 6}),	// Kr: [Ar] 4s2 3d10 4p6
    GSConfig(37, {2, 2, 6, 2, 6, 2, 10, 6, 1}),	// Rb: [Kr] 5s1
    GSConfig(38, {2, 2, 6, 2, 6, 2, 10, 6, 2}),	// Sr: [Kr] 5s2
    GSConfig(39, {2, 2, 6, 2, 6, 2, 10, 6, 2, 1}),	// Y: [Kr] 5s2 4d1
    GSConfig(40, {2, 2, 6, 2, 6, 2, 10, 6, 2, 2}),	// Zr: [Kr] 5s2 4d2
    GSConfig(41, {2, 2, 6, 2, 6, 2, 10, 6, 2, 3}),	// Nb: [Kr] 5s2 4d3
    GSConfig(42, {2, 2, 6, 2, 6, 2, 10, 6, 1, 5}),	// Mo: [Kr] 5s1 4d5 *
    GSConfig(43, {2, 2, 6, 2, 6, 2, 10, 6, 2, 5}),	// Tc: [Kr] 5s2 4d5
    GSConfig(44, {2, 2, 6, 2, 6, 2, 10, 6, 2, 6}),	// Ru: [Kr] 5s2 4d6
    GSConfig(45, {2, 2, 6, 2, 6, 2, 10, 6, 2, 7}),	// Rh: [Kr] 5s2 4d7
    GSConfig(46, {2, 2, 6, 2, 6, 2, 10, 6, 0, 10}),	// Pd: [Kr] 4d10 *
    GSConfig(47, {2, 2, 6, 2, 6, 2, 10, 6, 1, 10}),	// Ag: [Kr] 5s1 4d10 *
    GSConfig(48, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10}),	// Cd: [Kr] 5s2 4d10
    GSConfig(49, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 1}),	// In: [Kr] 5s2 4d10 5p1
    GSConfig(50, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 2}),	// Sn: [Kr] 5s2 4d10 5p2
    GSConfig(51, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 3}),	// Sb: [Kr] 5s2 4d10 5p3
    GSConfig(52, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 4}),	// Te: [Kr] 5s2 4d10 5p4
    GSConfig(53, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 5}),	// I: [Kr] 5s2 4d10 5p5
    GSConfig(54, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6}),	// Xe: [Kr] 5s2 4d10 5p6
    GSConfig(55, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 1}),	// Cs: [Xe] 6s1
    GSConfig(56, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2}),	// Ba: [Xe] 6s2
    GSConfig(57, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 0, 1}),	// La: [Xe] 6s2 5d1 *
    GSConfig(58, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 1, 1}),	// Ce: [Xe] 6s2 4f1 5d1 *
    GSConfig(59, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 3}),	// Pr: [Xe] 6s2 4f3
    GSConfig(60, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 4}),	// Nd: [Xe] 6s2 4f4
    GSConfig(61, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 5}),	// Pm: [Xe] 6s2 4f5
    GSConfig(62, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 6}),	// Sm: [Xe] 6s2 4f6
    GSConfig(63, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 7}),	// Eu: [Xe] 6s2 4f7
    GSConfig(64, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 7, 1}),	// Gd: [Xe] 6s2 4f7 5d1
    GSConfig(65, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 9}),	// Tb: [Xe] 6s2 4f9
    GSConfig(66, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 10}),	// Dy: [Xe] 6s2 4f10
    GSConfig(67, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 11}),	// Ho: [Xe] 6s2 4f11
    GSConfig(68, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 12}),	// Er: [Xe] 6s2 4f12
    GSConfig(69, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 13}),	// Tm: [Xe] 6s2 4f13
    GSConfig(70, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14}),	// Yb: [Xe] 6s2 4f14
    GSConfig(71, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 1}),	// Lu: [Xe] 6s2 4f14 5d1
    GSConfig(72, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 2}),	// Hf: [Xe] 6s2 4f14 5d2
    GSConfig(73, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 3}),	// Ta: [Xe] 6s2 4f14 5d3
    GSConfig(74, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 4}),	// W: [Xe] 6s2 4f14 5d4
    GSConfig(75, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 5}),	// Re: [Xe] 6s2 4f14 5d5
    GSConfig(76, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 6}),	// Os: [Xe] 6s2 4f14 5d6
    GSConfig(77, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 7}),	// Ir: [Xe] 6s2 4f14 5d7
    GSConfig(78, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 1, 14, 9}),	// Pt: [Xe] 6s1 4f14 5d9 *
    GSConfig(79, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 1, 14, 10}),	// Au: [Xe] 6s1 4f14 5d10 *
    GSConfig(80, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10}),	// Hg: [Xe] 6s2 4f14 5d10
    GSConfig(81, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 1}),	// Tl: [Xe] 6s2 4f14 5d10 6p1
    GSConfig(82, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 2}),	// Pb: [Xe] 6s2 4f14 5d10 6p2
    GSConfig(83, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 3}),	// Bi: [Xe] 6s2 4f14 5d10 6p3
    GSConfig(84, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 4}),	// Po: [Xe] 6s2 4f14 5d10 6p4
    GSConfig(85, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 5}),	// At: [Xe] 6s2 4f14 5d10 6p5
    GSConfig(86, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6}),	// Rn: [Xe] 6s2 4f14 5d10 6p6
    GSConfig(87, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 1}),	// Fr: [Rn] 7s1
    GSConfig(88, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2}),	// Ra: [Rn] 7s2
    GSConfig(89, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 0, 1}),	// Ac: [Rn] 7s2 6d1 *
    GSConfig(90, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 0, 2}),	// Th: [Rn] 7s2 6d2 *
    GSConfig(91, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 2, 1}),	// Pa: [Rn] 7s2 5f2 6d1 *
    GSConfig(92, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 3, 1}),	// U: [Rn] 7s2 5f3 6d1 *
    GSConfig(93, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 4, 1}),	// Np: [Rn] 7s2 5f4 6d1 *
    GSConfig(94, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 6}),	// Pu: [Rn] 7s2 5f6
    GSConfig(95, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 7}),	// Am: [Rn] 7s2 5f7
    GSConfig(96, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 7, 1}),	// Cm: [Rn] 7s2 5f7 6d1 *
    GSConfig(97, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 9}),	// Bk: [Rn] 7s2 5f9
    GSConfig(98, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 10}),	// Cf: [Rn] 7s2 5f10
    GSConfig(99, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 11}),	// Es: [Rn] 7s2 5f11
    GSConfig(100, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 12}),	// Fm: [Rn] 7s2 5f12
    GSConfig(101, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 13}),	// Md: [Rn] 7s2 5f13
    GSConfig(102, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14}),	// No: [Rn] 7s2 5f14
    GSConfig(103, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 0, 1}),	// Lr: [Rn] 7s2 5f14 7p1 *
    GSConfig(104, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 2}),	// Rf: [Rn] 7s2 5f14 6d2
    GSConfig(105, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 3}),	// Db: [Rn] 7s2 5f14 6d3
    GSConfig(106, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 4}),	// Sg: [Rn] 7s2 5f14 6d4
    GSConfig(107, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 5}),	// Bh: [Rn] 7s2 5f14 6d5
    GSConfig(108, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 6}),	// Hs: [Rn] 7s2 5f14 6d6
    GSConfig(109, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 7}),	// Mt: [Rn] 7s2 5f14 6d7
    GSConfig(110, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 8}),	// Ds: [Rn] 7s2 5f14 6d8
    GSConfig(111, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 9}),	// Rg: [Rn] 7s2 5f14 6d9
    GSConfig(112, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 10}),	// Cn: [Rn] 7s2 5f14 6d10
    GSConfig(113, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 10, 1}),	// Nh: [Rn] 7s2 5f14 6d10 7p1
    GSConfig(114, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 10, 2}),	// Fl: [Rn] 7s2 5f14 6d10 7p2
    GSConfig(115, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 10, 3}),	// Mc: [Rn] 7s2 5f14 6d10 7p3
    GSConfig(116, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 10, 4}),	// Lv: [Rn] 7s2 5f14 6d10 7p4
    GSConfig(117, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 10, 5}),	// Tn: [Rn] 7s2 5f14 6d10 7p5
    GSConfig(118, {2, 2, 6, 2, 6, 2, 10, 6, 2, 10, 6, 2, 14, 10, 6, 2, 14, 10, 6})	// Og: [Rn] 7s2 5f14 6d10 7p6
  };
  return gsconfigs[Z];
}
